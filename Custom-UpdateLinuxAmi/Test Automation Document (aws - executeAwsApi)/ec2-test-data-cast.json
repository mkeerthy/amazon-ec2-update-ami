{
	"schemaVersion": "0.3",
	"description": "Updates AMI with Linux distribution packages and Amazon software. For details,see https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-awsdocs-linux.html",
	"assumeRole": "{{AutomationAssumeRole}}",
	"parameters": {
		"SourceAmiId": {
			"type": "String",
			"description": "(Required) The source Amazon Machine Image ID."
		},
		"IamInstanceProfileName": {
			"type": "String",
			"description": "(Required) The instance profile that enables Systems Manager (SSM) to manage the instance.",
			"default": "ManagedInstanceProfile"
		},
		"AutomationAssumeRole": {
			"type": "String",
			"description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
			"default": "arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole"
		},
		"InstanceType": {
			"type": "String",
			"description": "(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is c5.xlarge.",
			"default": "c5n.xlarge"
		},
		"SubnetId": {
			"type": "String",
			"description": "(Optional) Specify the SubnetId if you want to launch EC2 instance in a specific subnet.",
			"default": ""
		}
	},
	"mainSteps": [
		{
			"name": "LaunchInstance",
			"action": "aws:runInstances",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"ImageId": "{{ SourceAmiId }}",
				"InstanceType": "{{ InstanceType }}",
				"UserData": "IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KcmVhZG9ubHkgU0NSSVBUX1VSTD0iaHR0cHM6Ly9hd3Mtc3NtLWRvd25sb2Fkcy0kUkVHSU9OLnMzLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQoNCmNkIC90bXANCkZJTEVfU0laRT0wDQpNQVhfUkVUUllfQ09VTlQ9Mw0KUkVUUllfQ09VTlQ9MA0KDQp3aGlsZSBbICRSRVRSWV9DT1VOVCAtbHQgJE1BWF9SRVRSWV9DT1VOVCBdIDsgZG8NCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IERvd25sb2FkaW5nIHNjcmlwdCBmcm9tICRTQ1JJUFRfVVJMDQogIGdldF9jb250ZW50cyAiJFNDUklQVF9VUkwiID4gIiRTQ1JJUFRfTkFNRSINCiAgRklMRV9TSVpFPSQoZHUgLWsgL3RtcC8kU0NSSVBUX05BTUUgfCBjdXQgLWYxKQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmluaXNoZWQgZG93bmxvYWRpbmcgc2NyaXB0LCBzaXplOiAkRklMRV9TSVpFDQogIGlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogICAgYnJlYWsNCiAgZWxzZQ0KICAgIGlmIFtbICRSRVRSWV9DT1VOVCAtbHQgTUFYX1JFVFJZX0NPVU5UIF1dOyB0aGVuDQogICAgICBSRVRSWV9DT1VOVD0kKChSRVRSWV9DT1VOVCsxKSk7DQogICAgICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmlsZVNpemUgaXMgMCwgcmV0cnlDb3VudDogJFJFVFJZX0NPVU5UDQogICAgZmkNCiAgZmkgDQpkb25lDQoNCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogIGNobW9kICt4ICIkU0NSSVBUX05BTUUiDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBSdW5uaW5nIFVwZGF0ZVNTTUFnZW50IHNjcmlwdCBub3cgLi4uLg0KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIg0KZWxzZQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogVW5hYmxlIHRvIGRvd25sb2FkIHNjcmlwdCwgcXVpdHRpbmcgLi4uLg0KZmkNCg==",
				"MinInstanceCount": 1,
				"MaxInstanceCount": 1,
				"IamInstanceProfileName": "{{ IamInstanceProfileName }}",
				"SubnetId": "{{ SubnetId }}"
			}
		},
		{
			"name": "assertInstanceIsManagedInstance",
			"action": "aws:assertAwsResourceProperty",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"Service": "ssm",
				"Api": "DescribeInstanceInformation",
				"InstanceInformationFilterList": [
					{
						"key": "InstanceIds",
						"valueSet": [
							"{{ LaunchInstance.InstanceIds }}"
						]
					}
				],
				"PropertySelector": "$.InstanceInformationList[0].PingStatus",
				"DesiredValues": [
					"Online"
				]
			}
		},
		{
			"name": "describeManagedInstanceForInstanceId",
			"action": "aws:executeAwsApi",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"Service": "ssm",
				"Api": "DescribeInstanceInformation",
				"InstanceInformationFilterList": [
					{
						"key": "InstanceIds",
						"valueSet": [
							"{{ LaunchInstance.InstanceIds }}"
						]
					}
				]
			},
			"outputs": [
				{
					"Name": "InstanceId",
					"Selector": "$.InstanceInformationList[0].InstanceId"
				}
			]
		},
		{
			"name": "describeManagedInstanceForPlatformType",
			"action": "aws:executeAwsApi",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"Service": "ssm",
				"Api": "DescribeInstanceInformation",
				"InstanceInformationFilterList": [
					{
						"key": "InstanceIds",
						"valueSet": [
							"{{ LaunchInstance.InstanceIds }}"
						]
					}
				]
			},
			"outputs": [
				{
					"Name": "PlatformType",
					"Selector": "$.InstanceInformationList[0].PlatformType"
				}
			]
		},
		{
			"name": "describeManagedInstanceForPlatformName",
			"action": "aws:executeAwsApi",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"Service": "ssm",
				"Api": "DescribeInstanceInformation",
				"InstanceInformationFilterList": [
					{
						"key": "InstanceIds",
						"valueSet": [
							"{{ LaunchInstance.InstanceIds }}"
						]
					}
				]
			},
			"outputs": [
				{
					"Name": "PlatformName",
					"Selector": "$.InstanceInformationList[0].PlatformName"
				}
			]
		},
		{
			"name": "describeManagedInstanceForPlatformVersion",
			"action": "aws:executeAwsApi",
			"timeoutSeconds": 1800,
			"maxAttempts": 3,
			"onFailure": "Abort",
			"inputs": {
				"Service": "ssm",
				"Api": "DescribeInstanceInformation",
				"InstanceInformationFilterList": [
					{
						"key": "InstanceIds",
						"valueSet": [
							"{{ LaunchInstance.InstanceIds }}"
						]
					}
				]
			},
			"outputs": [
				{
					"Name": "PlatformVersion",
					"Selector": "$.InstanceInformationList[0].PlatformVersion"
				}
			]
		},
		{
			"name": "GetLinuxKernelInformationBeforeUpdate",
			"action": "aws:runCommand",
			"maxAttempts": 3,
			"timeoutSeconds": 1200,
			"onFailure": "Abort",
			"inputs": {
				"DocumentName": "AWS-RunShellScript",
				"InstanceIds": [
					"{{ describeManagedInstanceForInstanceId.InstanceId }}"
				],
				"Parameters": {
					"commands": [
						"#!/bin/bash",
						"",
						"uname -a"
					]
				}
			}
		},
		{
			"name": "CheckForSriovNetSupport",
			"action": "aws:executeAwsApi",
			"maxAttempts": 3,
			"onFailure": "Abort",
			"timeoutSeconds": 1800,
			"inputs": {
				"Service": "ec2",
				"Api": "DescribeInstanceAttribute",
				"Attribute": "sriovNetSupport",
				"InstanceId": "{{ describeManagedInstanceForInstanceId.InstanceId }}"
			},
			"outputs": [
				{
					"Name": "StatusForSriovNetSupport",
					"Selector": "$.SriovNetSupport.Value",
					"Type": "String"
				}
			]
		},
		{
			"name": "CheckForEnaSupport",
			"action": "aws:executeAwsApi",
			"maxAttempts": 3,
			"onFailure": "Abort",
			"timeoutSeconds": 1800,
			"inputs": {
				"Service": "ec2",
				"Api": "DescribeInstances",
				"InstanceIds": [
					"{{ describeManagedInstanceForInstanceId.InstanceId }}"
				]
			},
			"outputs": [
				{
					"Name": "StatusForEnaSupport",
					"Selector": "$.Reservations[0].Instances[0].EnaSupport",
					"Type": "Boolean"
				}
			]
		}
	],
	"outputs": [
		"describeManagedInstanceForInstanceId.InstanceId"
	]
}